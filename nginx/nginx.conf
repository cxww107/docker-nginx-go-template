#nginx/nginx.conf 
events {
    worker_connections 1024;
}

http {

 upstream localhost {
    # These are references to our backend containers, facilitated by
    # Compose, as defined in docker-compose.yml   
    server app1:443;
    server app2:443;
    server app3:443;
 }

 server {
    listen       80;
    server_name  localhost;
    rewrite ^ https://$http_host$request_uri? permanent;    # force redirect http to https
    server_tokens off;
}  

 server {
    listen 8080 ssl;
    server_tokens off;  
    server_name localhost;
    ssl_certificate /.ssl/server.cert.pem;        # path to your cacert.pem
    ssl_certificate_key /.ssl/server.key.pem;    # path to your privkey.pem
    server_name localhost;

    location /api/ {
      proxy_pass https://localhost;
      proxy_ssl_certificate         /.certs/client/client.cert.pem;
      proxy_ssl_certificate_key     /.certs/client/client.key.unencrypted.pem;
      proxy_ssl_protocols           TLSv1 TLSv1.1 TLSv1.2;
      proxy_ssl_ciphers             HIGH:!aNULL:!MD5;
      proxy_ssl_trusted_certificate /.certs/trusted_ca_cert.crt;
      proxy_set_header Host $host;
    }
  }

  server{
     listen 443 ssl;
     server_name app1;
     ssl_certificate        /.certs/server/server.crt;
     ssl_certificate_key    /.certs/server/server.key.unencrypted.pem;
     ssl_client_certificate /.certs/ca.crt;
     ssl_verify_client      optional;
     location / {
            proxy_pass https://app1:443;
     }
  }

  server{
     listen 443 ssl;
     server_name app2;
     ssl_certificate        /.certs/server/server.crt;
     ssl_certificate_key    /.certs/server/server.key.unencrypted.pem;
     ssl_client_certificate /.certs/ca.crt;
     ssl_verify_client      optional;
     location / {
            proxy_pass https://app2:443;
     }
  }

  server{
     listen 443 ssl;
     server_name app3;
     ssl_certificate        /.certs/server/server.crt;
     ssl_certificate_key    /.certs/server/server.key.unencrypted.pem;
     ssl_client_certificate /.certs/ca.crt;
     ssl_verify_client      optional;
     location / {
            proxy_pass https://app3:443;
     }
  }
  
}